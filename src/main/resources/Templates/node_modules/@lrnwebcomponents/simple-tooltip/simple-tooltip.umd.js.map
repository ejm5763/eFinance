{"version":3,"file":"simple-tooltip.umd.js","sources":["simple-tooltip.umd.js"],"sourcesContent":["/**\n * Copyright 2020 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\n\n/**\n * `simple-tooltip`\n * `a simple tooltip forked from paper-tooltip with the same api minus apply removal`\n    ### Styling\n    The following custom properties and mixins are available for styling:\n\n    Custom property | Description | Default\n    ----------------|-------------|----------\n    `--simple-tooltip-background` | The background color of the tooltip | `#616161`\n    `--simple-tooltip-opacity` | The opacity of the tooltip | `0.9`\n    `--simple-tooltip-text-color` | The text color of the tooltip | `white`\n    `--simple-tooltip-delay-in` | Delay before tooltip starts to fade in | `500`\n    `--simple-tooltip-delay-out` | Delay before tooltip starts to fade out | `0`\n    `--simple-tooltip-duration-in` | Timing for animation when showing tooltip | `500`\n    `--simple-tooltip-duration-out` | Timing for animation when hiding tooltip | `0`\n * @demo demo/index.html\n * @element simple-tooltip\n */\nclass SimpleTooltip extends LitElement {\n  \n  //styles function\n  static get styles() {\n    return  [\n      css`\n:host {\n    display: block;\n    position: absolute;\n    outline: none;\n    z-index: 1002;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    -webkit-user-select: none;\n    user-select: none;\n    cursor: default;\n  }\n\n  #tooltip {\n    display: block;\n    outline: none;\n    font-size: var(--simple-tooltip-font-size, 10px);\n    line-height: 1;\n    background-color: var(--simple-tooltip-background, #616161);\n    color: var(--simple-tooltip-text-color, white);\n    padding: 8px;\n    border-radius: var(--simple-tooltip-border-radius, 2px);\n    width: var(--simple-tooltip-width)\n  }\n\n  @keyframes keyFrameScaleUp {\n    0% {\n      transform: scale(0.0);\n    }\n    100% {\n      transform: scale(1.0);\n    }\n  }\n\n  @keyframes keyFrameScaleDown {\n    0% {\n      transform: scale(1.0);\n    }\n    100% {\n      transform: scale(0.0);\n    }\n  }\n\n  @keyframes keyFrameFadeInOpacity {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: var(--simple-tooltip-opacity, 0.9);\n    }\n  }\n\n  @keyframes keyFrameFadeOutOpacity {\n    0% {\n      opacity: var(--simple-tooltip-opacity, 0.9);\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n\n  @keyframes keyFrameSlideDownIn {\n    0% {\n      transform: translateY(-2000px);\n      opacity: 0;\n    }\n    10% {\n      opacity: 0.2;\n    }\n    100% {\n      transform: translateY(0);\n      opacity: var(--simple-tooltip-opacity, 0.9);\n    }\n  }\n\n  @keyframes keyFrameSlideDownOut {\n    0% {\n      transform: translateY(0);\n      opacity: var(--simple-tooltip-opacity, 0.9);\n    }\n    10% {\n      opacity: 0.2;\n    }\n    100% {\n      transform: translateY(-2000px);\n      opacity: 0;\n    }\n  }\n\n  .fade-in-animation {\n    opacity: 0;\n    animation-delay: var(--simple-tooltip-delay-in, 500ms);\n    animation-name: keyFrameFadeInOpacity;\n    animation-iteration-count: 1;\n    animation-timing-function: ease-in;\n    animation-duration: var(--simple-tooltip-duration-in, 500ms);\n    animation-fill-mode: forwards;\n  }\n\n  .fade-out-animation {\n    opacity: var(--simple-tooltip-opacity, 0.9);\n    animation-delay: var(--simple-tooltip-delay-out, 0ms);\n    animation-name: keyFrameFadeOutOpacity;\n    animation-iteration-count: 1;\n    animation-timing-function: ease-in;\n    animation-duration: var(--simple-tooltip-duration-out, 500ms);\n    animation-fill-mode: forwards;\n  }\n\n  .scale-up-animation {\n    transform: scale(0);\n    opacity: var(--simple-tooltip-opacity, 0.9);\n    animation-delay: var(--simple-tooltip-delay-in, 500ms);\n    animation-name: keyFrameScaleUp;\n    animation-iteration-count: 1;\n    animation-timing-function: ease-in;\n    animation-duration: var(--simple-tooltip-duration-in, 500ms);\n    animation-fill-mode: forwards;\n  }\n\n  .scale-down-animation {\n    transform: scale(1);\n    opacity: var(--simple-tooltip-opacity, 0.9);\n    animation-delay: var(--simple-tooltip-delay-out, 500ms);\n    animation-name: keyFrameScaleDown;\n    animation-iteration-count: 1;\n    animation-timing-function: ease-in;\n    animation-duration: var(--simple-tooltip-duration-out, 500ms);\n    animation-fill-mode: forwards;\n  }\n\n  .slide-down-animation {\n    transform: translateY(-2000px);\n    opacity: 0;\n    animation-delay: var(--simple-tooltip-delay-out, 500ms);\n    animation-name: keyFrameSlideDownIn;\n    animation-iteration-count: 1;\n    animation-timing-function: cubic-bezier(0.0, 0.0, 0.2, 1);\n    animation-duration: var(--simple-tooltip-duration-out, 500ms);\n    animation-fill-mode: forwards;\n  }\n\n  .slide-down-animation-out {\n    transform: translateY(0);\n    opacity: var(--simple-tooltip-opacity, 0.9);\n    animation-delay: var(--simple-tooltip-delay-out, 500ms);\n    animation-name: keyFrameSlideDownOut;\n    animation-iteration-count: 1;\n    animation-timing-function: cubic-bezier(0.4, 0.0, 1, 1);\n    animation-duration: var(--simple-tooltip-duration-out, 500ms);\n    animation-fill-mode: forwards;\n  }\n\n  .cancel-animation {\n    animation-delay: -30s !important;\n  }\n\n  \n\n  .hidden {\n    display: none !important;\n  }\n      `\n    ];\n  }\n\n  // render function\n  render() {\n    return html`\n\n<div id=\"tooltip\" class=\"hidden\" @animationend=\"${this._onAnimationEnd}\">\n  <slot></slot>\n</div>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  ...super.properties\n  ,/**\n   * The id of the element that the tooltip is anchored to. This element\n   * must be a sibling of the tooltip. If this property is not set,\n   * then the tooltip will be centered to the parent node containing it.\n   */\n  \"for\": { \"type\": String },\n  /**\n   * Set this to true if you want to manually control when the tooltip\n   * is shown or hidden.\n   */\n  \"manualMode\": { \"type\": Boolean, \"attribute\": \"manual-mode\" },\n  /**\n   * Positions the tooltip to the top, right, bottom, left of its content.\n   */\n  \"position\": { \"type\": String },\n  /**\n   * If true, no parts of the tooltip will ever be shown offscreen.\n   */\n  \"fitToVisibleBounds\": {\n    \"type\": Boolean,\n    \"attribute\": \"fit-to-visible-bounds\"\n  },\n  /**\n   * The spacing between the top of the tooltip and the element it is\n   * anchored to.\n   */\n  \"offset\": { \"type\": Number },\n  /**\n   * This property is deprecated, but left over so that it doesn't\n   * break exiting code. Please use `offset` instead. If both `offset` and\n   * `marginTop` are provided, `marginTop` will be ignored.\n   * @deprecated since version 1.0.3\n   */\n  \"marginTop\": { \"type\": Number, \"attribute\": \"margin-top\" },\n  /**\n   * The delay that will be applied before the `entry` animation is\n   * played when showing the tooltip.\n   */\n  \"animationDelay\": { \"type\": Number, \"attribute\": \"animation-delay\" },\n  /**\n   * The animation that will be played on entry.  This replaces the\n   * deprecated animationConfig.  Entries here will override the\n   * animationConfig settings.  You can enter your own animation\n   * by setting it to the css class name.\n   */\n  \"animationEntry\": { \"type\": String, \"attribute\": \"animation-entry\" },\n  /**\n   * The animation that will be played on exit.  This replaces the\n   * deprecated animationConfig.  Entries here will override the\n   * animationConfig settings.  You can enter your own animation\n   * by setting it to the css class name.\n   */\n  \"animationExit\": { \"type\": String, \"attribute\": \"animation-exit\" },\n  \"_showing\": { \"type\": Boolean }\n}\n;\n  }\n\n  /**\n   * Convention we use\n   */\n  static get tag() {\n    return \"simple-tooltip\";\n  }\n\n  /**\n   * HTMLElement\n   */\n  constructor() {\n    super();\n    this.manualMode = false;\n    this.position = \"bottom\";\n    this.fitToVisibleBounds = false;\n    this.offset = 14;\n    this.marginTop = 14;\n    this.animationEntry = \"\";\n    this.animationExit = \"\";\n    this.animationConfig = {\n      entry: [{ name: \"fade-in-animation\", node: this, timing: { delay: 0 } }],\n      exit: [{ name: \"fade-out-animation\", node: this }]\n    };\n    setTimeout(() => {\n      this.addEventListener(\n        \"webkitAnimationEnd\",\n        this._onAnimationEnd.bind(this)\n      );\n      this.addEventListener(\"mouseenter\", this.hide.bind(this));\n    }, 0);\n  }\n  /**\n   * Returns the target element that this tooltip is anchored to. It is\n   * either the element given by the `for` attribute, or the immediate parent\n   * of the tooltip.\n   *\n   * @type {Node}\n   */\n  get target() {\n    var parentNode = this.parentNode;\n    // If the parentNode is a document fragment, then we need to use the host.\n    var ownerRoot = this.getRootNode();\n    var target;\n    if (this.for) {\n      target = ownerRoot.querySelector(\"#\" + this.for);\n    } else {\n      target =\n        parentNode.nodeType == Node.DOCUMENT_FRAGMENT_NODE\n          ? ownerRoot.host\n          : parentNode;\n    }\n    return target;\n  }\n  /**\n   * @return {void}\n   * @override\n   */\n  disconnectedCallback() {\n    if (!this.manualMode) {\n      this._removeListeners();\n    }\n    super.disconnectedCallback();\n  }\n\n  /**\n   * Replaces Neon-Animation playAnimation - just calls show and hide.\n   * @deprecated Use show and hide instead.\n   * @param {string} type Either `entry` or `exit`\n   */\n  playAnimation(type) {\n    if (type === \"entry\") {\n      this.show();\n    } else if (type === \"exit\") {\n      this.hide();\n    }\n  }\n\n  /**\n   * Cancels the animation and either fully shows or fully hides tooltip\n   */\n  cancelAnimation() {\n    // Short-cut and cancel all animations and hide\n    this.shadowRoot.querySelector(\"#tooltip\").classList.add(\"cancel-animation\");\n  }\n\n  /**\n   * Shows the tooltip programatically\n   * @return {void}\n   */\n  show() {\n    // If the tooltip is already showing, there's nothing to do.\n    if (this._showing) return;\n\n    if (this.textContent.trim() === \"\") {\n      // Check if effective children are also empty\n      var allChildrenEmpty = true;\n      var effectiveChildren = this.children;\n      for (var i = 0; i < effectiveChildren.length; i++) {\n        if (effectiveChildren[i].textContent.trim() !== \"\") {\n          allChildrenEmpty = false;\n          break;\n        }\n      }\n      if (allChildrenEmpty) {\n        return;\n      }\n    }\n\n    this._showing = true;\n    this.shadowRoot.querySelector(\"#tooltip\").classList.remove(\"hidden\");\n    this.shadowRoot\n      .querySelector(\"#tooltip\")\n      .classList.remove(\"cancel-animation\");\n    this.shadowRoot\n      .querySelector(\"#tooltip\")\n      .classList.remove(this._getAnimationType(\"exit\"));\n    this.updatePosition();\n    this._animationPlaying = true;\n    this.shadowRoot\n      .querySelector(\"#tooltip\")\n      .classList.add(this._getAnimationType(\"entry\"));\n  }\n\n  /**\n   * Hides the tooltip programatically\n   * @return {void}\n   */\n  hide() {\n    // If the tooltip is already hidden, there's nothing to do.\n    if (!this._showing) {\n      return;\n    }\n\n    // If the entry animation is still playing, don't try to play the exit\n    // animation since this will reset the opacity to 1. Just end the animation.\n    if (this._animationPlaying) {\n      this._showing = false;\n      this._cancelAnimation();\n      return;\n    } else {\n      // Play Exit Animation\n      this._onAnimationFinish();\n    }\n\n    this._showing = false;\n    this._animationPlaying = true;\n  }\n\n  /**\n   * @return {void}\n   */\n  updatePosition() {\n    if (!this._target || !this.offsetParent) return;\n    var offset = this.offset;\n    // If a marginTop has been provided by the user (pre 1.0.3), use it.\n    if (this.marginTop != 14 && this.offset == 14) offset = this.marginTop;\n    var parentRect = this.offsetParent.getBoundingClientRect();\n    var targetRect = this._target.getBoundingClientRect();\n    var thisRect = this.getBoundingClientRect();\n    var horizontalCenterOffset = (targetRect.width - thisRect.width) / 2;\n    var verticalCenterOffset = (targetRect.height - thisRect.height) / 2;\n    var targetLeft = targetRect.left - parentRect.left;\n    var targetTop = targetRect.top - parentRect.top;\n    var tooltipLeft, tooltipTop;\n    switch (this.position) {\n      case \"top\":\n        tooltipLeft = targetLeft + horizontalCenterOffset;\n        tooltipTop = targetTop - thisRect.height - offset;\n        break;\n      case \"bottom\":\n        tooltipLeft = targetLeft + horizontalCenterOffset;\n        tooltipTop = targetTop + targetRect.height + offset;\n        break;\n      case \"left\":\n        tooltipLeft = targetLeft - thisRect.width - offset;\n        tooltipTop = targetTop + verticalCenterOffset;\n        break;\n      case \"right\":\n        tooltipLeft = targetLeft + targetRect.width + offset;\n        tooltipTop = targetTop + verticalCenterOffset;\n        break;\n    }\n    // TODO(noms): This should use IronFitBehavior if possible.\n    if (this.fitToVisibleBounds) {\n      // Clip the left/right side\n      if (parentRect.left + tooltipLeft + thisRect.width > window.innerWidth) {\n        this.style.right = \"0px\";\n        this.style.left = \"auto\";\n      } else {\n        this.style.left = Math.max(0, tooltipLeft) + \"px\";\n        this.style.right = \"auto\";\n      }\n      // Clip the top/bottom side.\n      if (parentRect.top + tooltipTop + thisRect.height > window.innerHeight) {\n        this.style.bottom = parentRect.height - targetTop + offset + \"px\";\n        this.style.top = \"auto\";\n      } else {\n        this.style.top = Math.max(-parentRect.top, tooltipTop) + \"px\";\n        this.style.bottom = \"auto\";\n      }\n    } else {\n      this.style.left = tooltipLeft + \"px\";\n      this.style.top = tooltipTop + \"px\";\n    }\n  }\n\n  _addListeners() {\n    if (this._target) {\n      this._target.addEventListener(\"mouseenter\", this.show.bind(this));\n      this._target.addEventListener(\"focus\", this.show.bind(this));\n      this._target.addEventListener(\"mouseleave\", this.hide.bind(this));\n      this._target.addEventListener(\"blur\", this.hide.bind(this));\n      this._target.addEventListener(\"tap\", this.hide.bind(this));\n    }\n  }\n\n  _findTarget() {\n    if (!this.manualMode) this._removeListeners();\n    this._target = this.target;\n    if (!this.manualMode) this._addListeners();\n  }\n\n  _manualModeChanged() {\n    if (this.manualMode) this._removeListeners();\n    else this._addListeners();\n  }\n\n  _cancelAnimation() {\n    // Short-cut and cancel all animations and hide\n    this.shadowRoot\n      .querySelector(\"#tooltip\")\n      .classList.remove(this._getAnimationType(\"entry\"));\n    this.shadowRoot\n      .querySelector(\"#tooltip\")\n      .classList.remove(this._getAnimationType(\"exit\"));\n    this.shadowRoot\n      .querySelector(\"#tooltip\")\n      .classList.remove(\"cancel-animation\");\n    this.shadowRoot.querySelector(\"#tooltip\").classList.add(\"hidden\");\n  }\n\n  _onAnimationFinish() {\n    if (this._showing) {\n      this.shadowRoot\n        .querySelector(\"#tooltip\")\n        .classList.remove(this._getAnimationType(\"entry\"));\n      this.shadowRoot\n        .querySelector(\"#tooltip\")\n        .classList.remove(\"cancel-animation\");\n      this.shadowRoot\n        .querySelector(\"#tooltip\")\n        .classList.add(this._getAnimationType(\"exit\"));\n    }\n  }\n\n  _onAnimationEnd() {\n    // If no longer showing add class hidden to completely hide tooltip\n    this._animationPlaying = false;\n    if (!this._showing) {\n      this.shadowRoot\n        .querySelector(\"#tooltip\")\n        .classList.remove(this._getAnimationType(\"exit\"));\n      this.shadowRoot.querySelector(\"#tooltip\").classList.add(\"hidden\");\n    }\n  }\n\n  _getAnimationType(type) {\n    // These properties have priority over animationConfig values\n    if (type === \"entry\" && this.animationEntry !== \"\") {\n      return this.animationEntry;\n    }\n    if (type === \"exit\" && this.animationExit !== \"\") {\n      return this.animationExit;\n    }\n    // If no results then return the legacy value from animationConfig\n    if (\n      this.animationConfig[type] &&\n      typeof this.animationConfig[type][0].name === \"string\"\n    ) {\n      // Checking Timing and Update if necessary - Legacy for animationConfig\n      if (\n        this.animationConfig[type][0].timing &&\n        this.animationConfig[type][0].timing.delay &&\n        this.animationConfig[type][0].timing.delay !== 0\n      ) {\n        var timingDelay = this.animationConfig[type][0].timing.delay;\n        // Has Timing Change - Update CSS\n        if (type === \"entry\") {\n          document.documentElement.style.setProperty(\n            \"--simple-tooltip-delay-in\",\n            timingDelay + \"ms\"\n          );\n        } else if (type === \"exit\") {\n          document.documentElement.style.setProperty(\n            \"--simple-tooltip-delay-out\",\n            timingDelay + \"ms\"\n          );\n        }\n      }\n      return this.animationConfig[type][0].name;\n    }\n  }\n\n  _removeListeners() {\n    if (this._target) {\n      this._target.removeEventListener(\"mouseenter\", this.show.bind(this));\n      this._target.removeEventListener(\"focus\", this.show.bind(this));\n      this._target.removeEventListener(\"mouseleave\", this.hide.bind(this));\n      this._target.removeEventListener(\"blur\", this.hide.bind(this));\n      this._target.removeEventListener(\"tap\", this.hide.bind(this));\n    }\n  }\n  /**\n   * LitElement ready\n   */\n  firstUpdated(changedProperties) {\n    this.setAttribute(\"role\", \"tooltip\");\n    this.setAttribute(\"tabindex\", -1);\n    this._findTarget();\n  }\n  /**\n   * LitElement life cycle - property changed\n   */\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"for\") {\n        this._findTarget(this[propName], oldValue);\n      }\n      if (propName == \"manualMode\") {\n        this._manualModeChanged(this[propName], oldValue);\n      }\n      if (propName == \"animationDelay\") {\n        this._delayChange(this[propName], oldValue);\n      }\n    });\n  }\n  _delayChange(newValue) {\n    // Only Update delay if different value set\n    if (newValue !== 500) {\n      document.documentElement.style.setProperty(\n        \"--simple-tooltip-delay-in\",\n        newValue + \"ms\"\n      );\n    }\n  }\n}\ncustomElements.define(SimpleTooltip.tag, SimpleTooltip);\nexport { SimpleTooltip };\n"],"names":["SimpleTooltip","manualMode","position","fitToVisibleBounds","offset","marginTop","animationEntry","animationExit","animationConfig","entry","name","node","timing","delay","exit","setTimeout","addEventListener","_this","_onAnimationEnd","bind","hide","LitElement","html","this","css","String","Boolean","Number","_removeListeners","type","show","shadowRoot","querySelector","classList","add","_showing","textContent","trim","allChildrenEmpty","effectiveChildren","children","i","length","remove","_getAnimationType","updatePosition","_animationPlaying","_cancelAnimation","_onAnimationFinish","_target","offsetParent","tooltipLeft","tooltipTop","parentRect","getBoundingClientRect","targetRect","thisRect","horizontalCenterOffset","width","verticalCenterOffset","height","targetLeft","left","targetTop","top","window","innerWidth","style","right","Math","max","innerHeight","bottom","target","_addListeners","timingDelay","document","documentElement","setProperty","removeEventListener","changedProperties","setAttribute","_findTarget","forEach","oldValue","propName","_this2","_manualModeChanged","_delayChange","newValue","parentNode","ownerRoot","getRootNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","customElements","define","tag"],"mappings":"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"}