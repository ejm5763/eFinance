{"version":3,"file":"lrn-button.umd.js","sources":["lrn-button.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport { materialCssStyles } from \"@lrnwebcomponents/materializecss-styles/lib/colors.js\";\n\n/**\n * `lrn-button`\n * `Simple button wrapper with a few options`\n * @demo demo/index.html\n * @element lrn-button\n */\nclass LrnButton extends LitElement {\n  \n  //styles function\n  static get styles() {\n    return  [\n      \n      css`\n:host {\n    display: block;\n    --lrnsys-button-height: 48px;\n  }\n\n  :host(.center) {\n    text-align: center;\n  }\n\n  a {\n    text-decoration: none;\n    display: block;\n    color: #000000;\n  }\n\n  paper-button {\n    transition: .3s;\n    margin: 0;\n    max-width: 50%;\n    height: inherit;\n    -webkit-justify-content: flex-start;\n    justify-content: flex-start;\n    align-items: center;\n    border-radius: unset;\n  }\n\n  paper-button iron-icon {\n    height: var(--lrnsys-button-height);\n    margin: 0 12px;\n  }\n\n  paper-button div.inner {\n    height: var(--lrnsys-button-height);\n    line-height: var(--lrnsys-button-height);\n    padding: 0 12px;\n  }\n\n  paper-button span.label {\n    height: var(--lrnsys-button-height);\n    line-height: var(--lrnsys-button-height);\n  }\n\n  .no-margin {\n    margin: 0 !important;\n  }\n\n  .no-right-padding {\n    padding-right: 0 !important;\n  }\n\n  .no-left-padding {\n    padding-left: 0 !important;\n  }\n\n  .center {\n    text-align: center;\n    margin: 0 auto;\n  }\n      `\n    ];\n  }\n  // render function\n  render() {\n    return html`\n\n<a tabindex=\"-1\" id=\"lrnsys-button-link\" href=\"${this.showHref}\" data-prefetch-hover=\"${this.prefetch}\" target=\"${this.target}\">\n<paper-button id=\"button\" raised=\"${this.raised}\" class=\"${this.class} ${this.color} ${this.textColor}\" ?disabled=\"${this.disabled}\">\n    <div class=\"inner ${this.innerClass}\">\n      ${this.icon ? html`\n      <iron-icon icon=\"${this.icon}\" id=\"icon\" class=\"${this.iconClass}\"></iron-icon>\n      `:``}\n      ${this.label ? html`\n        <span class=\"label\">\n        ${this.label}\n        </span>`: ``}\n      <slot></slot>\n    </div>\n  </paper-button>\n</a>\n<simple-tooltip for=\"lrnsys-button-link\" animation-delay=\"0\">${this.alt}</simple-tooltip>`;\n  }\n\n  // properties available to the custom element for data binding\n    static get properties() {\n    return {\n  \n  ...super.properties,\n  \n  /**\n   * Standard href pass down\n   */\n  \"href\": {\n    \"type\": String\n  },\n  /**\n   * What to display for the resource\n   */\n  \"showHref\": {\n    \"type\": String,\n    \"attribute\": \"show-href\"\n  },\n  /**\n   * If the button should be visually lifted off the UI.\n   */\n  \"raised\": {\n    \"type\": Boolean\n  },\n  /**\n   * Label to place in the text area\n   */\n  \"label\": {\n    \"type\": String\n  },\n  \"target\": {\n    \"type\": String\n  },\n  /**\n   * iron-icon to use (with iconset if needed)\n   */\n  \"icon\": {\n    \"type\": String\n  },\n  /**\n   * Classes to add / subtract based on the item being hovered.\n   */\n  \"hoverClass\": {\n    \"type\": String,\n    \"attribute\": \"hover-class\"\n  },\n  /**\n   * Icon class in the event you want it to look different from the text.\n   */\n  \"iconClass\": {\n    \"type\": String,\n    \"attribute\": \"icon-class\"\n  },\n  /**\n   * Inner container classes.\n   */\n  \"innerClass\": {\n    \"type\": String,\n    \"attribute\": \"inner-class\"\n  },\n  /**\n   * materializeCSS color class\n   */\n  \"color\": {\n    \"type\": String\n  },\n  /**\n   * materializeCSS color class for text\n   */\n  \"textColor\": {\n    \"type\": String,\n    \"attribute\": \"text-color\"\n  },\n  /**\n   * Allow for prefetch data on hover\n   */\n  \"prefetch\": {\n    \"type\": String\n  },\n  /**\n   * Alt via tooltip.\n   */\n  \"alt\": {\n    \"type\": String\n  },\n  /**\n   * Disabled state.\n   */\n  \"disabled\": {\n    \"type\": Boolean\n  },\n  /**\n   * Tracks if focus state is applied\n   */\n  \"focusState\": {\n    \"type\": Boolean,\n    \"attribute\": \"focus-state\"\n  }\n}\n;\n  }\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"lrn-button\";\n  }\n  constructor() {\n    super();\n    this.href = \"#\";\n    this.label = \"\";\n    this.target = \"\";\n    this.disabled = false;\n    this.focusState = false;\n    setTimeout(() => {\n      this.addEventListener(\"mousedown\", this.tapEventOn);\n      this.addEventListener(\"mouseover\", this.tapEventOn);\n      this.addEventListener(\"mouseout\", this.tapEventOff);\n      this.addEventListener(\"focusin\", this.tapEventOn);\n      this.addEventListener(\"focusout\", this.tapEventOff);\n      import(\"@polymer/paper-button/paper-button.js\");\n      import(\"@lrnwebcomponents/simple-tooltip/simple-tooltip.js\");\n      import(\"@polymer/iron-icons/iron-icons.js\");\n      import(\"@polymer/iron-icon/iron-icon.js\");\n    }, 0);\n  }\n  firstUpdated() {\n    this.shadowRoot\n      .querySelector(\"#button\")\n      .addEventListener(\"focused-changed\", this.focusToggle);\n    if (!this.disabled) {\n      this.showHref = this.href;\n    }\n  }\n\n  /**\n   * Class processing on un-tap / hover\n   */\n  tapEventOn(e) {\n    if (typeof this.hoverClass !== typeof undefined && !this.disabled) {\n      // break class into array\n      var classes = this.hoverClass.split(\" \");\n      // run through each and add or remove classes\n      classes.forEach((item, index) => {\n        if (item != \"\") {\n          this.shadowRoot.querySelector(\"#button\").classList.add(item);\n          if (item.indexOf(\"-\") != -1) {\n            this.shadowRoot.querySelector(\"#icon\").classList.add(item);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Undo class processing on un-tap / hover\n   */\n  tapEventOff(e) {\n    if (typeof this.hoverClass !== typeof undefined && !this.disabled) {\n      // break class into array\n      var classes = this.hoverClass.split(\" \");\n      // run through each and add or remove classes\n      classes.forEach((item, index) => {\n        if (item != \"\") {\n          this.shadowRoot.querySelector(\"#button\").classList.remove(item);\n          if (item.indexOf(\"-\") != -1) {\n            this.shadowRoot.querySelector(\"#icon\").classList.remove(item);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Handle toggle for mouse class and manage classList array for paper-button.\n   */\n  focusToggle(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"focus-changed\", {\n        bubbles: true,\n        composed: true,\n        detail: { focus: this.focusState }\n      })\n    );\n    // see if it has hover classes\n    if (typeof this.hoverClass !== typeof undefined && !this.disabled) {\n      // break class into array\n      var classes = this.hoverClass.split(\" \");\n      // run through each and add or remove classes\n      classes.forEach((item, index) => {\n        if (item != \"\") {\n          if (this.focusState) {\n            this.shadowRoot.querySelector(\"#button\").classList.add(item);\n            if (item.indexOf(\"-\") != -1) {\n              this.shadowRoot.querySelector(\"#icon\").classList.add(item);\n            }\n          } else {\n            this.shadowRoot.querySelector(\"#button\").classList.remove(item);\n            if (item.indexOf(\"-\") != -1) {\n              this.shadowRoot.querySelector(\"#icon\").classList.remove(item);\n            }\n          }\n        }\n      });\n    }\n    this.focusState = !this.focusState;\n  }\n}\nwindow.customElements.define(LrnButton.tag, LrnButton);\nexport { LrnButton };\n"],"names":["LrnButton","href","label","target","disabled","focusState","setTimeout","addEventListener","_this","tapEventOn","tapEventOff","LitElement","html","this","showHref","prefetch","raised","color","textColor","innerClass","icon","iconClass","alt","css","String","Boolean","shadowRoot","querySelector","focusToggle","e","_typeof","hoverClass","split","forEach","item","index","_this2","classList","add","indexOf","_this3","remove","dispatchEvent","CustomEvent","bubbles","composed","detail","focus","_this4","window","customElements","define","tag"],"mappings":"wuHAaMA,yKAwMGC,KAAO,MACPC,MAAQ,KACRC,OAAS,KACTC,UAAW,IACXC,YAAa,EAClBC,WAAW,aACJC,iBAAiB,YAAaC,EAAKC,cACnCF,iBAAiB,YAAaC,EAAKC,cACnCF,iBAAiB,WAAYC,EAAKE,eAClCH,iBAAiB,UAAWC,EAAKC,cACjCF,iBAAiB,WAAYC,EAAKE,oBAChC,gDACA,6DACA,4CACA,oCACN,iPAvNiBC,yDAsEbC,WAEsCC,KAAKC,SAAkCD,KAAKE,SAAqBF,KAAKV,OACnFU,KAAKG,OAAkBH,WAAcA,KAAKI,MAASJ,KAAKK,UAAyBL,KAAKT,SAClGS,KAAKM,WACrBN,KAAKO,KAAOR,WACKC,KAAKO,KAA0BP,KAAKQ,cAErDR,KAAKX,MAAQU,WAEXC,KAAKX,UAMgDW,KAAKS,4CAlFxD,CAENC,qbA4FI,MACEC,iBAKE,MACFA,iBACK,oBAKL,MACAC,eAKD,MACCD,eAEA,MACAA,aAKF,MACEA,mBAKI,MACJA,iBACK,yBAKF,MACHA,iBACK,yBAKD,MACJA,iBACK,qBAKN,MACCA,kBAKG,MACHA,iBACK,uBAKH,MACFA,YAKH,MACGA,iBAKE,MACFC,oBAKI,MACJA,kBACK,mDAUN,gEAsBFC,WACFC,cAAc,WACdpB,iBAAiB,kBAAmBM,KAAKe,aACvCf,KAAKT,gBACHU,SAAWD,KAAKZ,yCAOd4B,4BACLC,EAAOjB,KAAKkB,aAAoClB,KAAKT,UAEzCS,KAAKkB,WAAWC,MAAM,KAE5BC,QAAQ,SAACC,EAAMC,GACT,IAARD,IACFE,EAAKV,WAAWC,cAAc,WAAWU,UAAUC,IAAIJ,IAC7B,GAAtBA,EAAKK,QAAQ,MACfH,EAAKV,WAAWC,cAAc,SAASU,UAAUC,IAAIJ,0CAUnDL,4BACNC,EAAOjB,KAAKkB,aAAoClB,KAAKT,UAEzCS,KAAKkB,WAAWC,MAAM,KAE5BC,QAAQ,SAACC,EAAMC,GACT,IAARD,IACFM,EAAKd,WAAWC,cAAc,WAAWU,UAAUI,OAAOP,IAChC,GAAtBA,EAAKK,QAAQ,MACfC,EAAKd,WAAWC,cAAc,SAASU,UAAUI,OAAOP,0CAUtDL,oBACLa,cACH,IAAIC,YAAY,gBAAiB,CAC/BC,SAAS,EACTC,UAAU,EACVC,OAAQ,CAAEC,MAAOlC,KAAKR,6BAItByB,EAAOjB,KAAKkB,aAAoClB,KAAKT,WAEzCS,KAAKkB,WAAWC,MAAM,KAE5BC,QAAQ,SAACC,EAAMC,GACT,IAARD,IACEc,EAAK3C,YACP2C,EAAKtB,WAAWC,cAAc,WAAWU,UAAUC,IAAIJ,IAC7B,GAAtBA,EAAKK,QAAQ,MACfS,EAAKtB,WAAWC,cAAc,SAASU,UAAUC,IAAIJ,KAGvDc,EAAKtB,WAAWC,cAAc,WAAWU,UAAUI,OAAOP,IAChC,GAAtBA,EAAKK,QAAQ,MACfS,EAAKtB,WAAWC,cAAc,SAASU,UAAUI,OAAOP,YAM7D7B,YAAcQ,KAAKR,oBAG5B4C,OAAOC,eAAeC,OAAOnD,EAAUoD,IAAKpD"}